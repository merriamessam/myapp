# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        env:
          DOCKER_REPO: your-docker-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $DOCKER_REPO:$IMAGE_TAG .
          minikube image load $DOCKER_REPO:$IMAGE_TAG
        

      # - name: Set up kubectl
      #   uses: azure/setup-kubectl@v1
      #   with:
      #     version: 'latest'

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
      
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Set up Minikube
      uses: medyagh/setup-minikube@master

    - name: Deploy to Minikube
      run: |
        kubectl apply -f k8s-manifests/
        kubectl set image deployment/your-deployment your-container=$DOCKER_REPO:$IMAGE_TAG
        kubectl rollout status deployment/your-deployment

    - name: Run tests
      run: |
        minikube service list
        # Add your test commands here

    - name: Clean up
      if: always()
      run: minikube delete
      
