# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
# Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

 # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history is necessary for accurate analysis

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: |
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.python.version=3.9
        env:
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: sonarcloud

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master

      - name: Build and Push Docker image
        env:
          DOCKER_REPO: your-docker-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $DOCKER_REPO:$IMAGE_TAG .
          minikube image load $DOCKER_REPO:$IMAGE_TAG
        
      # - name: Set up kubectl
      #   uses: azure/setup-kubectl@v1
      #   with:
      #     version: 'latest'

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
      
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Set up Minikube
      uses: medyagh/setup-minikube@master

    - name: Start Minikube
      run: |
        minikube start
        minikube status
        
      # Debugging Step
    - name: Print Minikube status
      run: minikube status
    - name: Deploy to Minikube
      run: |
        kubectl apply -f deployment.yaml
       
    - name: Run tests
      run: |
        minikube service list
        # Add your test commands here
    - name: Clean up
      if: always()
      run: minikube delete
