name: Build & Deploy myapp

on:
  push:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install SonarScanner
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk wget unzip
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          echo "export PATH=\"$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin\"" >> $GITHUB_ENV
      - name: Verify SonarScanner Installation
        run: |
          echo $PATH
          sonar-scanner --version
      - name: SonarCloud Scan
        run: |
          export JAVA_HOME=/opt/hostedtoolcache/Java_Adopt_jdk/17.0.12-7/x64
          sonar-scanner \
            -Dsonar.projectKey=merriamessam_myapp \
            -Dsonar.organization=merriamessam \
            -Dsonar.python.version=3.9 \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Install Dependencies
        run: npm install
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: |
          docker build -t merriamessam/myapp:latest .
      - name: Push Docker Image
        run: docker push merriamessam/myapp:latest

  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.26.3/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Start Minikube
        run: |
          minikube start --driver=docker
      - name: Kubernetes Orchestration
        run: |
          kubectl apply -f deployment.yaml
          kubectl scale deployment my-node-app --replicas=6
          sleep 40
          # Optionally check pod status or logs for troubleshooting
          # kubectl get pods
