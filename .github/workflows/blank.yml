name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  sonar:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Install SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          echo "PATH=$(pwd)/sonar-scanner-4.8.0.2856-linux/bin:\$PATH" >> $GITHUB_ENV

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=merriamessam_myapp \
            -Dsonar.organization=merriamessam \
            -Dsonar.python.version=3.9 \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}"

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master

      - name: Build and Push Docker image
        env:
          DOCKER_REPO: your-docker-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $DOCKER_REPO:$IMAGE_TAG .
          minikube image load $DOCKER_REPO:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Set up Minikube
      uses: medyagh/setup-minikube@master

    - name: Deploy to Minikube
      env:
        DOCKER_REPO: your-docker-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        kubectl apply -f deployment.yaml
        kubectl set image deployment/myapp myapp=$DOCKER_REPO:$IMAGE_TAG
        kubectl rollout status deployment/myapp

    - name: Run tests
      run: |
        minikube service list
        # Add your test commands here

    - name: Clean up
      if: always()
      run: minikube delete
